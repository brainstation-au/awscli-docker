name: sync-tags

on:
  push:
    branches:
      - "main"

jobs:
  tagV1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Find new tags in awscli
        id: awscli_tags
        shell: bash
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          last_tag=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | grep '^1' | head -n 1)
          awscli_tags=$(curl https://pypi.org/pypi/awscli/json \
            | jq '.releases' \
            | jq 'to_entries | map({"tag": .key, "time": .value | select(.[0]) | .[0] | .upload_time_iso_8601})' \
            | jq 'sort_by(.time)')
          if [[ -n $last_tag ]]; then
            last_tag_time=$(echo $awscli_tags | jq --arg last_tag $last_tag -r '.[] | select(.tag == $last_tag) | .time')
            new_tags=$(echo $awscli_tags | jq --arg last_tag_time $last_tag_time '[.[] | select(.time > $last_tag_time)]')
          else
            new_tags=$awscli_tags
          fi
          next_tag=$(echo $new_tags | jq -r '.[0] | .tag')
          echo "::set-output name=next_tag::$next_tag"

      - name: Build and Test Docker Image
        shell: bash
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        env:
          DOCKER_TAG: ${{ steps.awscli_tags.outputs.next_tag }}
        run: |
          echo $DOCKER_TAG
          export DOCKER_TAG=${{ steps.awscli_tags.outputs.next_tag }}
          echo $DOCKER_TAG
          exit 1
          docker-compose -f docker-compose.test.yml build sut1
          docker-compose -f docker-compose.test.yml run --rm sut1
          docker-compose -f docker-compose.test.yml down

      - name: Add a new tag
        shell: bash
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        run: |
          next_tag=${{ steps.awscli_tags.outputs.next_tag }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a $next_tag -m "Automatic tag to catch up aws/aws-cli release"

      - name: Push changes
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./DockerfileV1
          push: true
          build-args: |
            DOCKER_TAG=${{ steps.awscli_tags.outputs.next_tag }}
          tags: |
            brainstation/awscli-test:${{ steps.awscli_tags.outputs.next_tag }}

      - name: Image digest
        if: ${{ steps.awscli_tags.outputs.next_tag != 'null' }}
        run: echo ${{ steps.docker_build.outputs.digest }}

  tagV2:
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: code
      - name: My latest tag
        id: myTag
        shell: bash
        run: |
          cd code
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* > /dev/null
          tag=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | grep '^2' | head -n 1)
          echo "::set-output name=tag::$tag"
      - name: Checkout to aws/aws-cli
        uses: actions/checkout@v2
        with:
          repository: aws/aws-cli
          path: awscli
      - name: Find latest tags from aws/aws-cli
        id: awscli_tags
        shell: bash
        run: |
          cd awscli
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* > /dev/null
          awscli_tags=$(git for-each-ref --sort=creatordate --format '{"tag":"%(refname:short)", "time":"%(creatordate:iso-strict)"}' refs/tags | jq -s '.' | jq '[.[] | select(.tag | test("^[0-9]+[.][0-9]+[.][0-9]+$"))]')
          last_tag=${{ steps.myTag.outputs.tag }}
          if [[ -n $last_tag ]]; then
            last_tag_time=$(echo $awscli_tags | jq --arg last_tag $last_tag -r '.[] | select(.tag == $last_tag) | .time')
            new_tags=$(echo $awscli_tags | jq --arg last_tag_time $last_tag_time '[.[] | select(.time > $last_tag_time) | select(.tag | test("^2"))]')
          else
            new_tags=$awscli_tags
          fi
          next_tag=$(echo $new_tags | jq -r '.[0] | .tag')
          echo "::set-output name=next_tag::$next_tag"
      - name: Add a new tag
        shell: bash
        run: |
          next_tag=${{ steps.awscli_tags.outputs.next_tag }}
          if [[ "$next_tag" == "null" ]]; then
            echo "No new tag to add."
          else
            cd code
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git tag -a $next_tag -m "Automatic tag to catch up aws/aws-cli release"
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: code
